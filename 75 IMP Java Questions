Java Freshers Top 75 Core Java Intervie Questions List Java Interview Questions

1.Can Java thread object invoke start method "twice" ? 
  It is never legal to start a thread more than once. In particular, a thread may not be restarted once it has completed execution.
          Throws: IllegalThreadStateException - if the thread was already started.
2.Give the list of Java Object class methods ?
  toString(): The toString() provides a String representation of an object and is used to convert an object to a String. 
              The default toString() method for class Object returns a string consisting of the name of the class of which the object is an instance, 
              the at-sign character `@’, and the unsigned hexadecimal representation of the hash code of the object
  hashCode(): For every object, JVM generates a unique number which is a hashcode.
              It returns distinct integers for distinct objects.
              A common misconception about this method is that the hashCode() method returns the address of the object, which is not correct.
              It converts the internal address of the object to an integer by using an algorithm. 
              The hashCode() method is native because in Java it is impossible to find the address of an object, 
              so it uses native languages like C/C++ to find the address of the object.
  equals(Object obj): It compares the given object to “this” object (the object on which the method is called).
                      It gives a generic way to compare objects for equality. 
                      It is recommended to override the equals(Object obj) method to get our own equality condition on Objects.
  finalize(): This method is called just before an object is garbage collected. 
              It is called the Garbage Collector on an object when the garbage collector determines that there are no more references to the object. 
              We should override finalize() method to dispose of system resources, 
              perform clean-up activities and minimize memory leaks.
  getClass(): It returns the class object of “this” object and is used to get the actual runtime class of the object.
              It can also be used to get metadata of this class. The returned Class object is the object that is locked by static
              synchronized methods of the represented class. As it is final so we don’t override it.
  clone(): It returns a new object that is exactly the same as this object.
3.Can we call servlet destory() from service():
  The servlet's destroy() method is only called by the container whenever it's going to be shutdown. 
  During container's shutdown all servlets will be destroyed. 
  You should not call the method yourself. 
  The destroy() method just offers you the opportunity to execute some code upon shutdown. 
  For example, to close some external resources which were opened during init().
4.Can we override a static method ? 
  No, we cannot override static methods because method overriding is based on dynamic binding at runtime and the static methods are bonded using static binding at compile time.
          So, we cannot override static methods.
5.Can you list "Serialization" Interface methods ? 
  The Serializable interface is present in java.io package. 
  It is a marker interface. A Marker Interface does not have any methods and fields.
  Thus classes implementing it do not have to implement any methods.
6.What is the difference between super() and this() ? 
  "this()" can only be used to invoke other constructors within the same class, while "super()" invokes the parent class constructor.
7.How to prevent a method from being overridden ? 
  The final way of preventing overriding is by using the final keyword in your method. 
          The final keyword puts a stop to being an inheritance. Hence, 
          if a method is made final it will be considered final implementation and no other class can override the behavior.
8.Can we create abstract classes without any abstract methods ? 
  Yes, you can declare abstract class without defining an abstract method in it. 
          Once you declare a class abstract it indicates that the class is incomplete and, 
          You cannot instantiate it. Hence, if you want to prevent instantiation of a class directly you can declare it abstract.
9.Explain private,protected,public ? 
  Public - the property or method can be accessed from everywhere. This is default. 
          Protected - the property or method can be accessed within the class and by classes derived from that class. 
          Private - the property or method can ONLY be accessed within the class.
10.Can we have static methods in interface ?
  Similar to Default Method in Interface, the static method in an interface can be defined in the interface, 
          but cannot be overridden in Implementation Classes
11.What is transient variable ?
  In Java, the transient keyword is used to mark a variable as transient. 
           When applied to a variable, it instructs the Java Virtual Machine (JVM) to exclude the variable from the default serialization process. 
           Serialization is the process of converting an object into a stream of bytes to store it in memory or transmit it over a network.
           The main purpose of marking a variable as transient is to prevent its value from being persisted. 
           This is particularly useful when dealing with sensitive or non-serializable data that should not be stored or transmitted. 
           By excluding such variables from serialization, we can ensure the privacy and integrity of the data.
12.Incase, there is a return at the end of try block, will execute finally block ?
  Yes, The result of the try/catch expression will be the last line of either the try or catch block, 
          but the finally block will always execute no matter what
13.What is abstract class or abstract method ?
   Abstract class: is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class). 
   Abstract method: can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).
14.What is default value of a boolean ? False
15.When to use LinkedList or ArrayList ? 
   ArrayList provides constant time for search operation, so it is better to use ArrayList if searching is more frequent operation than add and remove operation. 
   The LinkedList provides constant time for add and remove operations. So it is better to use LinkedList for manipulation.
16.What is daemon thread ? 
  A daemon thread is a thread that runs in the background and does not prevent the Java Virtual Machine (JVM) from exiting when all non-daemon threads in Java have been completed.
  These threads are typically used to perform background tasks such as garbage collection, monitoring, and other system-level operations.
17.Does each thread in java uses seperate stack ? 
  Each JVM thread has a private JVM stack, created at the same time as the thread.
18.What is the difference between Enumeration and Iterator ?
  1. Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics.
  2. Method names have been improved.
  3. Iterators are fail-fast . i.e. when one thread changes the collection by add / remove operations ,
  while another thread is traversing it through an Iterator using hasNext() or next() method,
  the iterator fails quickly by throwing ConcurrentModificationException .
  The fail-fast behavior of iterators can be used only to detect bugs. 
  The Enumerations returned by the methods of classes like Hashtable,
  Vector are not fail-fast that is achieved by synchronizing the block of code inside the nextElement() 
  method that locks the current Vector object which costs lots of time.
19.Does system.exit() in try block executes finally block ? 
   No. System.exit(0) doesn't return, and the finally block is not executed. 
20.What is fail-fast in Java ? Explain ?
   Fail-fast and Fail-safe are the iterators or collections in Java. 
   Java SE specification doesn't use the Fail-safe term. We use the Fail-safe to segregate between the Non-Fail-fast and Fail-fast iterators. 
   The Fail-Fast system terminates the operation as-fast-as-possible that are exposing failures and stop the entire operation. Whereas, Fail-Safe system doesn't terminate the operation that are exposing failures.
   The Fail-safe system tries to avoid raising Failures as much as possible.
21.What is final, finally and finalize ?
   final is a keyword used in Java to restrict the modification of a variable, method, or class.
   finally is a block used in Java to ensure that a section of code is always executed, even if an exception is thrown. 
   finalize is a method in Java used to perform cleanup processing on an object before it is garbage collected.
22.In java, are true and false keywords ?
   true, false, and null might seem like keywords, but they are actually literals; you cannot use them as identifiers in your programs.
23.What is the purpose of "Garbage Collection" ? [Need more time]
   Garbage collection ensures that a program does not exceed its memory quota or reach a point that it can no longer function.
   It also frees up developers from having to manually manage a program's memory, which, in turn, reduces the potential for memory-related bugs.
24.What are the types of ResultSet ? [Need more time]
   ResultSet contains results of the SQL query. There are 3 basic types of ResultSet.
    Forward-only
    As name suggest, this type can only move forward and are non-scrollable.

    Scroll-insensitive
    This type is scrollable which means the cursor can move in any direction. It is insensitive which means any change to the database will not show change in the ResultSet while it open.

    Scroll-sensitive
    This type allows cursor to move in any direction and also propagates the changes done to the database.

25.What is difference between "wait" and "sleep" methods in Java ?
   sleep() is the simplest way to put your thread to a sleep for finite duration while wait() is a sophisticated way for inter-thread communication in Java over an object.
26.What is servlet context ? 
27.What happens if one of the members in a class does not implement Serializable interface ?
28.What is race condition ? 
29.How to get current time in milli seconds ?
30.How can you convert Map to List ? 
31.What is strictfp keyword ?
32.What is System.out in Java ? 
33.What is difference between ServletOuptputStream and PrintWriter ? 
34.What is Java static import ? 
35.When to use String and StringBuffer ? 
36.What is difference between StringBuffer and StringBuilder ? 
37.What is wrapper class in Java ? 
38.Is Iterator a Class ? 
39.What is Java classpath ? 
40.Can a class in Java be marked as private ? 
41.Is null a keyword in Java ? 
42.What is the initial state of a thread when it is started ? 
43.What is the super class for Exception and Error ?
44.What is Class.forName() ? 45.Can interface be final ? 
46.What is the difference between exception and error ?
47.What is default value of a local variables ?
48.What is local class in Java ? 
49.Can we initialize uninitialized final variable ?
50.Can we declare abstract method as final ?
51.Can we have finally block without catch block ?
52.What is pass by value and pass by reference ?
53.Can we declare main method as private ? 
54.What is the difference between preemptive scheduling and time slicing ?
53.Can non-static member classes (Local classes) have static members ?
54.What are the environment variables do we neet to set to run Java ?
55.Can you serialize static fields of a class ? 
56.What is the difference between declaring a variable and defining a variable ?
57.Where can we use serialization ?
58.What modifiers are allowed for methods in an Interface ?
59.What is the purpose of Runtime and System class ? 
60.Which one is faster ? ArrayList or Vector ? Why ? 
61.What is the difference between "Static Synchronized" and "Synchronized" methods ?
62.What is the order of catch blocks when catching more than one exception ? 
63.What is the difference between the prefix and postfix forms of the increment(++) operator ? 
64.What is hashCode ? 65.What is the difference between Hashtable and HashMap ?
66.What are the restrictions when overriding a method ? 67.What is the use of assert keyword ? 
68.What is difference between break, continue and return statements ? 
69.What is the difference between while and do-while statements ?
70.When does the compiler provides the default constructor ?
71.How to create and start a thread in Java ? 
72.Can I extend a "Final" class in Java ? 
73.Explain "volatile" keyword in Java ?
74.Can we catch "RuntimeException" ? What is "Checked" and "Unchecked" Exception ? 
75.When to make a constructor "private" and why ?
